掌握Java核心技术是学习和掌握好Java技术的关键，下边分17个点对这些Java核心技术进行讲解。
1.Java中没有多继承，而是用接口来代替多继承。
2.运行一个已经编译的程序时，Java解释器总是从指定类的main方法中的代码开始执行，因此，执行代码中必须有一个main函数。
3.Java是典型的强类型语言，即必须声明变量的类型，Java中有8种类型，6种数值类型（4个整数型和2个浮点型）、一个字符类型和一个boolean类型。
4.强制类型转换：int nx = （int） x; // （语法：用圆括号将目标类型括起来，后面跟上要转换的变量）；
5.Java不能为单独的方法，如main方法，定义局部常量，而只能为类定义常量，供该类的所有方法使用，所以，通常称之为类常量。如：
注意：常量定义于main方法的外边，而且必须有关键字 static final;
6.字符串的子串：
String str = hello""; String str1 = str.substring（0,4）； //输出hell
7.不要用==运算符来测试两个字符串是否相等，该运算符只能判断两个字符串是否存在同一个位置。用equals.
String str = "hello"; str.equals（"hell"）； // return false;
8.对象的行为、状态、标识
9.面向过程与OOP
10.构造函数：
用于初始化类的对象，必须于类的名称相同、构造函数可有一个或多个参数、总是用new关键字来调用构造函数、一个类可以有多个构造函数（参数不同）。
11.静态方法：
静态方法是属于类的，不需要创建类的实例对象就可以调用静态方法。如控制台类：
x = Console.readDouble（）；
使用类的静态方法的一般语法为：类名。静态方法（参数）；
12.重载（多态性）：
如果一个类下面有几个相同的方法，但是参数不同，这样就形成了方法的重载。
Java可以重载任何方法，而不仅是构造函数。
13.对象的类型转换：
Manager boss = （Manager） args[0];
14.Java数组和Java向量的区别：
Java数组可以存储任何类型的变量，Java向量只能存储对象类的实例。
Vector（） //构造一个空的向量，初始容量为10,当超出当前容量时，容量加倍。 Vector（int initialcapicity） Vector（int initialcapicity,int n） //当超出当前向量，当前向量数+n扩展。 void addElement（Object obj） //向向量尾部附加一个新元素 int size（）
15.具有一个或多个抽象方法的类，必须声明为抽象类（关键字abstract）
//public abstract class HelloWorld（）{ public abstract void test（）； //抽象方法：是不完整的方法，仅有声明而没有方法体 }
抽象方法要求所有从抽象类派生的非抽象类都将实现该抽象方法。抽象方法作为占位符方法是在子类中实现的。
16.抽象类不可实例化（由于抽象类可能包含不完整的抽象方法）
17.JDBC的内部原理及思想：
1） JDBC实际有两层组成，上层是JDBC API,该API与数据库驱动程序通信，向其发送SQL语句。数据库驱动程序将SQL语句与关系型数据库连接。
2）JDBC与数据库连接模型